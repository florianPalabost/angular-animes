version: '3.4'

services:
  postgres:
    container_name: postgres
    image: postgres:11
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: animes_api
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped


  angular:
    build: frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/usr/src/app

  nodejs:
    build: backend_api
    environment:
      DATABASE_URL: postgres://postgres:admin@postgres:5432/animes_api
      NODE_ENV: development
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend_api:/usr/src/app
    depends_on:
      - postgres
    networks:
      - postgres

  jwt:
    build: jwt
    environment:
      DATABASE_URL: postgres://postgres:admin@postgres:5432/jwt
      NODE_ENV: development
      PORT: 3003
    ports:
      - "3003:3003"
    volumes:
      - ./jwt:/usr/src/app
    depends_on:
      - postgres
    networks:
      - postgres     
      
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  jikan-rest:
    build:
      context: jikan
      dockerfile: Dockerfile
    depends_on:
      - jikan-redis
    ports:
      - "9001:80"
    restart: always

  jikan-redis:
    image: redis:5.0.3
    restart: always
  
networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
